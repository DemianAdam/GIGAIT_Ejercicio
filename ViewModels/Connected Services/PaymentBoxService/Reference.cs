//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViewModels.PaymentBoxService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlUniqueFault", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.Faults")]
    [System.SerializableAttribute()]
    public partial class SqlUniqueFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlInvalidOperationException", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.Faults")]
    [System.SerializableAttribute()]
    public partial class SqlInvalidOperationException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PaymentBoxService.IPaymentBoxService")]
    public interface IPaymentBoxService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Add", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/AddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ViewModels.PaymentBoxService.SqlUniqueFault), Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/AddSqlUniqueFaultFault", Name="SqlUniqueFault", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.Faults")]
        int Add(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Add", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Update", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/UpdateResponse")]
        void Update(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Update", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Delete", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/DeleteResponse")]
        void Delete(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/Delete", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Models.PaymentBox entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectAll", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectAllResponse")]
        System.Collections.Generic.List<Models.PaymentBox> SelectAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectAll", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Models.PaymentBox>> SelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectById", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectByIdResponse")]
        Models.PaymentBox SelectById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectById", ReplyAction="http://tempuri.org/ICRUDServiceOf_PaymentBox/SelectByIdResponse")]
        System.Threading.Tasks.Task<Models.PaymentBox> SelectByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/Activate", ReplyAction="http://tempuri.org/IPaymentBoxService/ActivateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ViewModels.PaymentBoxService.SqlInvalidOperationException), Action="http://tempuri.org/IPaymentBoxService/ActivateSqlInvalidOperationExceptionFault", Name="SqlInvalidOperationException", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.Faults")]
        void Activate(int paymentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/Activate", ReplyAction="http://tempuri.org/IPaymentBoxService/ActivateResponse")]
        System.Threading.Tasks.Task ActivateAsync(int paymentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/Deactivate", ReplyAction="http://tempuri.org/IPaymentBoxService/DeactivateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ViewModels.PaymentBoxService.SqlInvalidOperationException), Action="http://tempuri.org/IPaymentBoxService/DeactivateSqlInvalidOperationExceptionFault" +
            "", Name="SqlInvalidOperationException", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.Faults")]
        void Deactivate(int paymentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/Deactivate", ReplyAction="http://tempuri.org/IPaymentBoxService/DeactivateResponse")]
        System.Threading.Tasks.Task DeactivateAsync(int paymentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/SelectLastId", ReplyAction="http://tempuri.org/IPaymentBoxService/SelectLastIdResponse")]
        int SelectLastId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/SelectLastId", ReplyAction="http://tempuri.org/IPaymentBoxService/SelectLastIdResponse")]
        System.Threading.Tasks.Task<int> SelectLastIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/SelectIdByName", ReplyAction="http://tempuri.org/IPaymentBoxService/SelectIdByNameResponse")]
        int SelectIdByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentBoxService/SelectIdByName", ReplyAction="http://tempuri.org/IPaymentBoxService/SelectIdByNameResponse")]
        System.Threading.Tasks.Task<int> SelectIdByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaymentBoxServiceChannel : ViewModels.PaymentBoxService.IPaymentBoxService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentBoxServiceClient : System.ServiceModel.ClientBase<ViewModels.PaymentBoxService.IPaymentBoxService>, ViewModels.PaymentBoxService.IPaymentBoxService {
        
        public PaymentBoxServiceClient() {
        }
        
        public PaymentBoxServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentBoxServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentBoxServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentBoxServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(Models.PaymentBox entity) {
            return base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(Models.PaymentBox entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Update(Models.PaymentBox entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Models.PaymentBox entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public void Delete(Models.PaymentBox entity) {
            base.Channel.Delete(entity);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Models.PaymentBox entity) {
            return base.Channel.DeleteAsync(entity);
        }
        
        public System.Collections.Generic.List<Models.PaymentBox> SelectAll() {
            return base.Channel.SelectAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Models.PaymentBox>> SelectAllAsync() {
            return base.Channel.SelectAllAsync();
        }
        
        public Models.PaymentBox SelectById(int id) {
            return base.Channel.SelectById(id);
        }
        
        public System.Threading.Tasks.Task<Models.PaymentBox> SelectByIdAsync(int id) {
            return base.Channel.SelectByIdAsync(id);
        }
        
        public void Activate(int paymentBoxId) {
            base.Channel.Activate(paymentBoxId);
        }
        
        public System.Threading.Tasks.Task ActivateAsync(int paymentBoxId) {
            return base.Channel.ActivateAsync(paymentBoxId);
        }
        
        public void Deactivate(int paymentBoxId) {
            base.Channel.Deactivate(paymentBoxId);
        }
        
        public System.Threading.Tasks.Task DeactivateAsync(int paymentBoxId) {
            return base.Channel.DeactivateAsync(paymentBoxId);
        }
        
        public int SelectLastId() {
            return base.Channel.SelectLastId();
        }
        
        public System.Threading.Tasks.Task<int> SelectLastIdAsync() {
            return base.Channel.SelectLastIdAsync();
        }
        
        public int SelectIdByName(string name) {
            return base.Channel.SelectIdByName(name);
        }
        
        public System.Threading.Tasks.Task<int> SelectIdByNameAsync(string name) {
            return base.Channel.SelectIdByNameAsync(name);
        }
    }
}
